{"remainingRequest":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/nuomi/Desktop/项目/fury-client/fury-client/src/views/home/casino/index.vue?vue&type=style&index=0&id=19d622a8&lang=less&scoped=true","dependencies":[{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/src/views/home/casino/index.vue","mtime":1719009040332},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/css-loader/dist/cjs.js","mtime":1716171609309},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1716171609792},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/postcss-loader/src/index.js","mtime":1716171609472},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/less-loader/dist/cjs.js","mtime":1716171609345},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/cache-loader/dist/cjs.js","mtime":1716171608994},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/vue-loader-v16/dist/index.js","mtime":1716171609468}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250ZW50IHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgZm9udC1mYW1pbHk6IE1vbnRzZXJyYXQgVmFyaWFibGUsIHNhbnMtc2VyaWY7Cn0KCi5kZXNrdG9wLWl0ZW0gewogIGRpc3BsYXk6IG5vbmU7Cn0KLmFjdGl2ZS1pbWdzIHsKICB3aWR0aDogMTAwJTsKICBvdmVyZmxvdzogaGlkZGVuOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgZ2FwOiAyMHB4OwogIC5hY3RpdmUtaW1nIHsKICAgIGZsZXg6IDE7CiAgICBpbWcgewogICAgICB3aWR0aDogMTAwJTsKICAgICAgYm9yZGVyLXJhZGl1czogMTFweDsKICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgfQogIH0KfQpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7CiAgLmRlc2t0b3AtaXRlbSB7CiAgICBkaXNwbGF5OiBpbmxpbmU7CiAgfQogIC5kZXNrdG9wIHsKICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsKICB9CiAgLmRyYXctbG90dGVyeSB7CiAgICBkaXNwbGF5OiBub25lOwogIH0KICAuYWN0aXZlLWltZ3MgewogICAgZ2FwOiAxNXB4OwogICAgbWFyZ2luLXRvcDogNXB4OwogIH0KfQo="},{"version":3,"sources":["/Users/nuomi/Desktop/项目/fury-client/fury-client/src/views/home/casino/index.vue"],"names":[],"mappings":";AAuOA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACV,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACP,CAAC,CAAC,EAAE;MACF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB;EACF;AACF;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACjB;AACF","file":"/Users/nuomi/Desktop/项目/fury-client/fury-client/src/views/home/casino/index.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"content\">\n    <div v-if=\"$route.name === 'casino'\">\n      <RotationChatRoll></RotationChatRoll>\n      <!-- 活动图片-->\n      <div class=\"active-imgs center\" v-show=\"dataCenter.layout.isMobile\">\n        <div class=\"active-img\">\n          <a href=\"/#/cashback\">\n            <img\n              src=\"@/assets/home/casino/242241713755244_.pic.jpg\"\n              draggable=\"false\"\n            />\n          </a>\n        </div>\n        <div class=\"active-img\">\n          <img\n            src=\"@/assets/home/casino/243111713761339_.pic.jpg\"\n            draggable=\"false\"\n            @click=\"openGirdNine\"\n          />\n        </div>\n      </div>\n      <Marquee></Marquee>\n      <Embla @emblaSelect=\"emblaSelect\"></Embla>\n      <SectionIndex :sectionData=\"sectionData\"></SectionIndex>\n      <!-- 游戏摇奖，暂不需要 -->\n      <!-- <DrawLottery class=\"draw-lottery\"></DrawLottery> -->\n    </div>\n    <router-view></router-view>\n    <div>\n      <Desktop\n        class=\"desktop\"\n        @childEvent=\"handleChildEvent\"\n        :number-list=\"numberList\"\n        :item-list=\"getItemList()\"\n        :select-name=\"contactRoller.selectItem\"\n        @selectNumber=\"selectNumber\"\n      >\n      </Desktop>\n      <DesktopItem\n        class=\"desktop-item\"\n        @childEvent=\"handleChildEvent\"\n        :number-list=\"numberList\"\n        :item-list=\"getItemList()\"\n        :select-name=\"contactRoller.selectItem\"\n        @selectNumber=\"selectNumber\"\n      >\n      </DesktopItem>\n      <ContactRoller\n        :gameListType=\"contactRoller.selectType\"\n        :select-item=\"selectItem\"\n        :select-name=\"contactRoller.selectItem\"\n      ></ContactRoller>\n    </div>\n    <Feedback></Feedback>\n  </div>\n</template>\n<script lang=\"ts\">\nimport IcoAllBets from '@/assets/icon/game/ico-all-bets.vue';\nimport IcoHighRollers from '@/assets/icon/game/ico-high-rollers.vue';\nimport IcoMyBets from '@/assets/icon/game/ico-my-bets.vue';\nimport IcoRareWins from '@/assets/icon/game/ico-rare-wins.vue';\nimport dataCenter from '@/dataCenter';\nimport { lang } from '@/lang';\nimport { defineComponent, markRaw } from 'vue';\nimport { getGameCategory, getGames } from '../api';\nimport { getGameGroupResp, GetGamesResp } from '../api/protocol';\nimport ContactRoller from '../center/contacRoller/ContactRoller.vue';\nimport Desktop from '../center/desktop/Desktop.vue';\nimport DesktopItem from '../center/desktop/DesktopItem.vue';\nimport Feedback from '././about/Feedback.vue';\nimport Embla from './Embla.vue';\nimport SectionIndex from './LobbySections/SectionIndex.vue';\nimport RotationChatRoll from './RotationChart/RotationChatRoll.vue';\nimport Marquee from '@/views/marquee/marquee.vue';\nimport { openModal } from '@/manager/view';\nimport Receba from '../other/Receba.vue';\nimport Login from '../login/Login.vue';\nimport { contactRoller } from '../center/contacRoller';\nimport { casino } from '.';\nconst IcoAllBetsRaw = markRaw(IcoAllBets);\nconst IcoMyBetsRaw = markRaw(IcoMyBets);\nconst IcoHighRollersRaw = markRaw(IcoHighRollers);\nconst IcoRareWinsRaw = markRaw(IcoRareWins);\n\nexport default defineComponent({\n  data() {\n    return {\n      numberList: [\n        {\n          key: '10',\n          value: '10',\n        },\n        {\n          key: '20',\n          value: '20',\n        },\n        {\n          key: '50',\n          value: '50',\n        },\n      ],\n      selectItem: '10',\n      index: 0,\n      sectionData: {\n        selected: 0,\n        groupId: 0,\n        gameGroup: [] as getGameGroupResp[],\n        gameData: [] as GetGamesResp[],\n      },\n      dataCenter,\n      contactRoller,\n    };\n  },\n  methods: {\n    handleChildEvent(selectName: string, selectType: string) {\n      contactRoller.selectType = selectType;\n      contactRoller.selectItem = selectName;\n    },\n    selectNumber(text: string) {\n      this.selectItem = text;\n    },\n    getItemList() {\n      return [\n        {\n          key: 'All Bets',\n          get name() {\n            return lang.v.ca_allBets;\n          },\n          icon: IcoAllBetsRaw,\n        },\n        {\n          key: 'My Bets',\n          get name() {\n            return lang.v.ca_myBets;\n          },\n          icon: IcoMyBetsRaw,\n        },\n        {\n          key: 'High Rollers',\n          get name() {\n            return lang.v.ca_rollers;\n          },\n          icon: IcoHighRollersRaw,\n        },\n        {\n          key: 'Rare Wins',\n          get name() {\n            return lang.v.ca_rareWins;\n          },\n          icon: IcoRareWinsRaw,\n        },\n      ];\n    },\n    emblaSelect(index: number) {\n      casino.emblaList.seleted = index;\n      this.sectionData.selected = index;\n      if (index != 0) {\n        this.sectionData.groupId = this.sectionData.gameGroup[index - 1].id;\n      }\n    },\n    getGamesData(id: number) {\n      getGames(id, 17, 1).then((data) => {\n        if (data) {\n          this.sectionData.gameData.push(data);\n          this.index += 1;\n          casino.emblaList.list[0].count += data.total;\n          casino.emblaList.list[this.index].count = data.total;\n          dataCenter.gameConfiguration.currentGameGroup.total = data.total;\n          if (this.sectionData.gameGroup.length > 0) {\n            if (this.index < this.sectionData.gameGroup.length) {\n              this.getGamesData(this.sectionData.gameGroup[this.index].id);\n            }\n          }\n        }\n      });\n    },\n    openGirdNine() {\n      if (dataCenter.user.data) {\n        openModal(Receba);\n      } else {\n        openModal(Login);\n      }\n    },\n  },\n  components: {\n    RotationChatRoll,\n    Embla,\n    SectionIndex,\n    Feedback,\n    Desktop,\n    ContactRoller,\n    DesktopItem,\n    Marquee,\n  },\n\n  mounted() {\n    contactRoller.selectItem = 'All Bets';\n    getGameCategory().then((data) => {\n      if (data) {\n        casino.emblaList.list = [\n          {\n            key: 'lobby',\n            icon: '',\n            get name() {\n              return lang.v.ca_lobby;\n            },\n            count: 0,\n          },\n        ];\n        casino.emblaList.list = casino.emblaList.list.concat(\n          data.map(function (item) {\n            return {\n              key: item.name,\n              icon: item.icon,\n              name: item.name.replace(/-/g, ' '),\n              count: item.total,\n            };\n          }),\n        );\n        this.sectionData.gameGroup = data;\n        if (this.sectionData.gameGroup.length > 0) {\n          this.getGamesData(this.sectionData.gameGroup[this.index].id);\n        }\n      }\n    });\n  },\n});\n</script>\n\n<style lang=\"less\" scoped>\n.content {\n  display: flex;\n  flex-direction: column;\n  font-family: Montserrat Variable, sans-serif;\n}\n\n.desktop-item {\n  display: none;\n}\n.active-imgs {\n  width: 100%;\n  overflow: hidden;\n  margin-top: 20px;\n  gap: 20px;\n  .active-img {\n    flex: 1;\n    img {\n      width: 100%;\n      border-radius: 11px;\n      cursor: pointer;\n    }\n  }\n}\n@media only screen and (max-width: 767px) {\n  .desktop-item {\n    display: inline;\n  }\n  .desktop {\n    display: none !important;\n  }\n  .draw-lottery {\n    display: none;\n  }\n  .active-imgs {\n    gap: 15px;\n    margin-top: 5px;\n  }\n}\n</style>\n"]}]}