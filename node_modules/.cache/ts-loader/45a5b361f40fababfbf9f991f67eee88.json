{"remainingRequest":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/babel-loader/lib/index.js!/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/ts-loader/index.js??ref--15-2!/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/eslint-loader/index.js??ref--14-0!/Users/nuomi/Desktop/项目/fury-client/fury-client/src/views/game/dice/left/api/index.ts","dependencies":[{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/src/views/game/dice/left/api/index.ts","mtime":1716171553028},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/babel.config.js","mtime":1716171552917},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/cache-loader/dist/cjs.js","mtime":1716171608994},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/babel-loader/lib/index.js","mtime":1716171609486},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/ts-loader/index.js","mtime":1716171609531},{"path":"/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/eslint-loader/index.js","mtime":1716171609105}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcG9zdCB9IGZyb20gJ0AvYXBpJzsKaW1wb3J0IHsgVVNFUlBMQVlfUExBWV9QTEFZR0FNRSB9IGZyb20gJy4vcHJvdG9jb2wnOwpleHBvcnQgYXN5bmMgZnVuY3Rpb24gcGxheUdhbWUocHJlZGljdGVkVmFsdWUsIGhpZ2hPckxvdywgYmV0QW1vdW50LCBjdXJyZW5jeUlkKSB7CiAgdHJ5IHsKICAgIGNvbnN0IHJlc3AgPSBhd2FpdCBwb3N0KFVTRVJQTEFZX1BMQVlfUExBWUdBTUUsIHsKICAgICAgcHJlZGljdGVkVmFsdWUsCiAgICAgIGhpZ2hPckxvdywKICAgICAgYmV0QW1vdW50LAogICAgICBjdXJyZW5jeUlkCiAgICB9KTsKICAgIHJldHVybiByZXNwOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICByZXR1cm4gdW5kZWZpbmVkOwogIH0KfQ=="},{"version":3,"names":["post","USERPLAY_PLAY_PLAYGAME","playGame","predictedValue","highOrLow","betAmount","currencyId","resp","error","undefined"],"sources":["/Users/nuomi/Desktop/项目/fury-client/fury-client/node_modules/eslint-loader/index.js??ref--14-0!/Users/nuomi/Desktop/项目/fury-client/fury-client/src/views/game/dice/left/api/index.ts"],"sourcesContent":["import { post } from '@/api';\nimport { PlayGameReq, PlayGameResp, USERPLAY_PLAY_PLAYGAME } from './protocol';\n\nexport async function playGame(predictedValue: number, highOrLow: number, betAmount: number, currencyId: number) {\n  try {\n    const resp = await post<PlayGameResp, PlayGameReq>(USERPLAY_PLAY_PLAYGAME, {\n      predictedValue,\n      highOrLow,\n      betAmount,\n      currencyId,\n    });\n    return resp;\n  } catch (error) {\n    return undefined;\n  }\n}"],"mappings":"AAAA,SAASA,IAAI,QAAQ,OAAO;AAC5B,SAAoCC,sBAAsB,QAAQ,YAAY;AAE9E,OAAO,eAAeC,QAAQA,CAACC,cAAsB,EAAEC,SAAiB,EAAEC,SAAiB,EAAEC,UAAkB;EAC7G,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMP,IAAI,CAA4BC,sBAAsB,EAAE;MACzEE,cAAc;MACdC,SAAS;MACTC,SAAS;MACTC;KACD,CAAC;IACF,OAAOC,IAAI;GACZ,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOC,SAAS;;AAEpB"}]}